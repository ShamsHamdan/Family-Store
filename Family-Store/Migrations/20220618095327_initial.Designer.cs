// <auto-generated />
using Family_Store.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Family_Store.Migrations
{
    [DbContext(typeof(family_storeContext))]
    [Migration("20220618095327_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Family_Store.Models.Bags", b =>
                {
                    b.Property<int>("IDB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bmaterail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Btype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.HasKey("IDB");

                    b.HasIndex("IDC");

                    b.ToTable("bag");
                });

            modelBuilder.Entity("Family_Store.Models.Boots", b =>
                {
                    b.Property<int>("IDBO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BObrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BOcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BOprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BOsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.HasKey("IDBO");

                    b.HasIndex("IDC");

                    b.ToTable("boot");
                });

            modelBuilder.Entity("Family_Store.Models.Clothes", b =>
                {
                    b.Property<int>("IDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ctype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDF")
                        .HasColumnType("int");

                    b.HasKey("IDC");

                    b.HasIndex("IDF");

                    b.ToTable("clothes");
                });

            modelBuilder.Entity("Family_Store.Models.Dresses", b =>
                {
                    b.Property<int>("IDD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dfabric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dlength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.HasKey("IDD");

                    b.HasIndex("IDC");

                    b.ToTable("dress");
                });

            modelBuilder.Entity("Family_Store.Models.Jakets", b =>
                {
                    b.Property<int>("IDJ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("Jbrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDJ");

                    b.HasIndex("IDC");

                    b.ToTable("jaket");
                });

            modelBuilder.Entity("Family_Store.Models.Sandals", b =>
                {
                    b.Property<int>("IDSA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("SAbrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDSA");

                    b.HasIndex("IDC");

                    b.ToTable("sandal");
                });

            modelBuilder.Entity("Family_Store.Models.Scarves", b =>
                {
                    b.Property<int>("IDSC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("SCcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCfabric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDSC");

                    b.HasIndex("IDC");

                    b.ToTable("scarf");
                });

            modelBuilder.Entity("Family_Store.Models.Shoes", b =>
                {
                    b.Property<int>("IDSH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("SHbrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDSH");

                    b.HasIndex("IDC");

                    b.ToTable("shoes");
                });

            modelBuilder.Entity("Family_Store.Models.Shorts", b =>
                {
                    b.Property<int>("IDSR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("SRbrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDSR");

                    b.HasIndex("IDC");

                    b.ToTable("shorts");
                });

            modelBuilder.Entity("Family_Store.Models.Skirts", b =>
                {
                    b.Property<int>("IDSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("SKcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKfabric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKlength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDSK");

                    b.HasIndex("IDC");

                    b.ToTable("skirts");
                });

            modelBuilder.Entity("Family_Store.Models.T_shirts", b =>
                {
                    b.Property<int>("IDST")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("STbrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDST");

                    b.HasIndex("IDC");

                    b.ToTable("t_shirts");
                });

            modelBuilder.Entity("Family_Store.Models.Trousers", b =>
                {
                    b.Property<int>("IDT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDC")
                        .HasColumnType("int");

                    b.Property<string>("Tcolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tfabric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tprice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tsize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDT");

                    b.HasIndex("IDC");

                    b.ToTable("trousers");
                });

            modelBuilder.Entity("Family_Store.Models.family", b =>
                {
                    b.Property<int>("IDF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDF");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("Family_Store.Models.Bags", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Boots", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Clothes", b =>
                {
                    b.HasOne("Family_Store.Models.family", "family")
                        .WithMany()
                        .HasForeignKey("IDF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Dresses", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Jakets", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Sandals", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Scarves", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Shoes", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Shorts", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Skirts", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.T_shirts", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Family_Store.Models.Trousers", b =>
                {
                    b.HasOne("Family_Store.Models.Clothes", "Clothes")
                        .WithMany()
                        .HasForeignKey("IDC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
